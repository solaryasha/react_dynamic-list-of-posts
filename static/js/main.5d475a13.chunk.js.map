{"version":3,"sources":["components/Button/Button.tsx","API/API.ts","constants.ts","utils/preparePosts.ts","components/CommentItem/CommentItem.tsx","components/CommentList/CommentList.tsx","components/UserItem/UserItem.tsx","components/Post/Post.tsx","components/Input/Input.tsx","components/PostList/PostList.tsx","utils/filterTodos.ts","App.tsx","index.tsx"],"names":["Button","content","onClick","type","className","getData","url","a","fetch","response","json","data","noUser","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparePosts","posts","users","comments","map","post","matchedUser","find","user","userId","matchedComments","filter","comment","postId","makePosts","CommentItem","body","CommentList","key","UserItem","Post","title","Input","value","onChange","placeholder","PostList","useState","setFilter","memoPosts","useMemo","includes","getFilteredPosts","target","memoPost","App","setPosts","isLoading","setLoading","isLoaded","setLoaded","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d475a13.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\ninterface Props {\n  onClick: () => void;\n  content: string;\n}\n\nexport const Button: FC<Props> = ({ content, onClick }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className=\"btn btn-primary\"\n    >\n      {content}\n    </button>\n  );\n};\n","export const postsUrl = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/posts.json';\nexport const usersUrl = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/users.json';\nexport const commentsUrl = 'https://mate-academy.github.io/react_dynamic-list-of-posts/api/comments.json';\n\nexport const getData = async <T>(url: string): Promise<T[]> => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n","export const noUser = {\n  id: 0,\n  name: '',\n  username: '',\n  email: '',\n  address: {\n    street: '',\n    suite: '',\n    city: '',\n    zipcode: '',\n    geo: {\n      lat: '',\n      lng: '',\n    },\n    phone: '',\n    website: '',\n    company: {\n      name: '',\n      catchPhrase: '',\n      bs: '',\n    },\n  },\n};\n","import {\n  Post, User, Comment, PreparedPost,\n} from '../interfaces';\nimport {\n  getData, postsUrl, usersUrl, commentsUrl,\n} from '../API/API';\nimport { noUser } from '../constants';\n\nexport const preparePosts = (posts: Post[], users: User[], comments: Comment[]) => {\n  return posts.map(post => {\n    const matchedUser = users.find(user => user.id === post.userId) || noUser;\n    const matchedComments = comments.filter(comment => comment.postId === post.id);\n\n    return { post, user: { ...matchedUser }, comments: matchedComments };\n  });\n};\n\nexport const makePosts = async (): Promise<PreparedPost[]> => {\n  const posts = await getData<Post>(postsUrl);\n  const users = await getData<User>(usersUrl);\n  const comments = await getData<Comment>(commentsUrl);\n\n  return preparePosts(posts, users, comments);\n};\n","import React, { FC } from 'react';\nimport { Comment } from '../../interfaces';\n\ninterface Props {\n  content: Comment;\n}\n\nexport const CommentItem: FC<Props> = ({ content }) => {\n  const { name, body, email } = content;\n\n  return (\n    <div className=\"card text-white bg-secondary mb-3\">\n      <div className=\"card-header\">{name}</div>\n      <div className=\"card-body\">\n        <p>{body}</p>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Comment } from '../../interfaces';\nimport { CommentItem } from '../CommentItem/CommentItem';\n\ninterface Props {\n  comments: Comment[];\n}\n\nexport const CommentList: FC<Props> = ({ comments }) => {\n  return (\n    <div className=\"card text-white bg-primary mb-3\">\n      <div className=\"card-header\">Comments</div>\n      <div className=\"card-body\">\n        {\n          comments.map(comment => <CommentItem content={comment} key={comment.id} />)\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { User } from '../../interfaces';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserItem: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <div className=\"card-header\">\n      <div>{ name }</div>\n      <div>{ email }</div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { PreparedPost } from '../../interfaces';\nimport { CommentList } from '../CommentList/CommentList';\nimport { UserItem } from '../UserItem/UserItem';\nimport './Post.css';\n\ninterface Props {\n  content: PreparedPost;\n}\n\nexport const Post: FC<Props> = ({ content }) => {\n  const { post, user, comments } = content;\n  const { title, body } = post;\n\n  return (\n    <div className=\"card text-white bg-primary mb-3\">\n      <UserItem user={user} />\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{title}</h4>\n        <p className=\"card-text\">{body}</p>\n      </div>\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\ninterface Props {\n  value: string;\n  onChange: (event: { target: HTMLInputElement }) => void;\n}\n\nexport const Input: FC<Props> = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className=\"form-control\"\n      placeholder=\"Filter posts by title or body\"\n    />\n  );\n};\n","import React, { FC, useState, useMemo } from 'react';\nimport { PreparedPost } from '../../interfaces';\nimport { Post } from '../Post/Post';\nimport { getFilteredPosts } from '../../utils/filterTodos';\nimport './PostList.css';\nimport { Input } from '../Input/Input';\n\ninterface Props {\n  posts: PreparedPost[];\n}\n\nexport const PostList: FC<Props> = ({ posts }) => {\n  const [filter, setFilter] = useState<string>('');\n\n  const memoPosts = useMemo(() => {\n    return getFilteredPosts(posts, filter);\n  }, [posts, filter]);\n\n  return (\n    <div className=\"post-list\">\n      <Input\n        value={filter}\n        onChange={({ target }) => setFilter(target.value)}\n      />\n      {\n        memoPosts.map(memoPost => <Post content={memoPost} key={memoPost.post.id} />)\n      }\n    </div>\n\n  );\n};\n","import { PreparedPost } from '../interfaces';\n\nexport const getFilteredPosts = (\n  posts: PreparedPost[],\n  filter: string,\n): PreparedPost[] => {\n  const matchedPosts = posts.filter(({ post }) => {\n    const { title, body } = post;\n\n    return title.includes(filter) || body.includes(filter);\n  });\n\n  return matchedPosts;\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Button } from './components/Button/Button';\nimport { PreparedPost } from './interfaces';\nimport { makePosts } from './utils/preparePosts';\nimport { PostList } from './components/PostList/PostList';\n\nconst App = () => {\n  const [posts, setPosts] = useState<PreparedPost[]>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const loadData = () => {\n    setLoading(true);\n    makePosts().then(data => {\n      setPosts(data);\n      setLoading(false);\n      setLoaded(true);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Dynamic list of posts</h1>\n      {\n        isLoaded\n          ? <PostList posts={posts} />\n          : (\n            <Button\n              onClick={loadData}\n              content={isLoading ? 'Loading...' : 'Load'}\n            />\n          )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}